<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd http://www.springframework.org/schema/security/oauth http://www.springframework.org/schema/security/spring-security-oauth.xsd">

    <bean id="serializer" class="biometric.serialize.JSONSerializer" />
    <bean id="authSystem" class="biometric.BiometricSystem" />
    <bean id="appointments" class="appointment.Appointments" />
    <bean id="availability" class="appointment.Availability" />

    <mongo:repositories base-package="db.repositories" />

    <mongo:mongo port="${mongo.port}" host="${mongo.address}"/>

    <bean id="mongoCredentials" class="org.springframework.data.authentication.UserCredentials">
        <constructor-arg name="username" value="${mongo.user}"/>
        <constructor-arg name="password" value="${mongo.password}" />
    </bean>

    <!-- MongoTemplate for connecting and quering the documents in the database -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongo" ref="mongo" />
        <constructor-arg name="databaseName" value="${mongo.database}" />
        <constructor-arg name="userCredentials" ref="mongoCredentials" />
    </bean>

    <!-- OAuth -->
    <oauth2:client id="oauth2ClientFilter"/>

    <oauth2:resource id="googleOauth2Resource"
                    type = "authorization_code"
                    client-id="211837377506-ho65lr38gmos1aap6t4v0necohmjt5eh.apps.googleusercontent.com"
                    client-secret="hDk-L1XTD9jIs53gXbJa6EDt"
                    access-token-uri="https://accounts.google.com/o/oauth2/token"
                    user-authorization-uri="https://accounts.google.com/o/oauth2/auth"
                    scope="https://www.googleapis.com/auth/calendar"
                    client-authentication-scheme="form"
                    pre-established-redirect-uri="http://127.0.0.1/"/>
    <oauth2:rest-template id="authorize"
                          resource="googleOauth2Resource"/>

</beans>