/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Renette' at '2015/05/28 9:24 PM' with Gradle 2.2.1
 *
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'cosbas'
    version =  '0.0.1'
}

// In this section you declare where to find the dependencies of your project
repositories {
    //jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "http://jasperreports.sourceforge.net/maven2"
    }
    maven {
        url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"
    }
}


sourceCompatibility = 7
targetCompatibility = 7

sourceSets {
    jasper {
        def srcDir = file(relativePath('src/main/resources/reports'))
        def classesDir = srcDir
    }
}


dependencies {
    compile 'org.springframework:spring-context:4.1.6.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.0.1.RELEASE'
    compile 'org.springframework.webflow:spring-webflow:2.4.0.RELEASE'
    compile 'org.springframework.session:spring-session:1.0.1.RELEASE'
    compile 'org.springframework.ldap:spring-ldap-core:2.0.3.RELEASE'

    compile 'com.google.apis:google-api-services-calendar:v3-rev126-1.20.0'

    compile 'nu.pattern:opencv:2.4.9-7'

    //TODO THis one breaks the build cause it can't find a dependency
    //compile 'net.sf.jasperreports:jasperreports:6.1.0'

    compile 'net.sf.jasperreports:jasperreports:6.1.0'
    // Testing framework.
    testCompile "junit:junit"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

//All these stuff for jasper

configurations.create('jasperreports')
configurations.jasperreports {
    transitive = true
}
/*
task compileJasperJava(overwrite: true) << {
    ant {
        taskdef(name: 'jrc', classname: 'net.sf.jasperreports.ant.JRAntCompileTask', classpath: configurations.jasperreports.asPath)
        sourceSets.jasper.classesDir.mkdirs()
        jrc(srcdir: sourceSets.jasper.srcDir, destdir: sourceSets.jasper.classesDir) {
         *///   include(name:'**/*.jrxml')
     /*   }
    }
}
*/
classes.dependsOn compileJasperJava